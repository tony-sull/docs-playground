---
import sidebar, { isHeader } from "../data/sidebar.js";
import type { SidebarLink } from "../data/sidebar.js";

export interface Props {
    lang?: string;
}

const { lang = 'en' } = Astro.props as Props;

const sidebarSections = sidebar[lang].reduce((col, item, i) => {
	// If the first item is not a section header, create a new container section.
	if (i === 0) {
		if (!isHeader(item)) {
			const pesudoSection = { text: '' };
			col.push({ ...pesudoSection, children: [] });
		}
	}
	if (isHeader(item)) {
		col.push({ ...item, children: [] });
	} else {
		col[col.length - 1].children.push(item);
	}
	return col;
}, [] as { text: string, children: SidebarLink[] }[]);
---

<nav>
    <ul>
        {sidebarSections.map(({ text, children }) => (
            <li>
                <div>
                    <h2>{text}</h2>
                    <ol>
                        {children.map(({ link, text }) => (
                            <li>
                                <a href={link}>{text}</a>
                            </li>
                        ))}
                    </ol> 
                </div>
            </li>
        ))}
    </ul>
</nav>

<style>
    nav {
        position: relative;
    }

    ul, ol {
        display: flex;
        flex-direction: column;
        padding: 0;
        list-style: none;
    }

    h2 {
        font-size: var(--text-lg);
        padding-block-end: var(--gap-2xs);
    }

    ul {
        gap: var(--gap-lg);
    }

    ol {
        gap: var(--gap-xs);
    }
</style>
