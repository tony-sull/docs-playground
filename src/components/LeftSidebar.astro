---
import NavList from "./NavList.astro";
import type { NavLink } from "./NavList.astro";
import sidebar, { isHeader } from "../data/sidebar.js";

export interface Props {
    lang?: string;
}

const { lang = 'en' } = Astro.props as Props;

const sidebarSections = sidebar[lang].reduce((col, item, i) => {
	// If the first item is not a section header, create a new container section.
	if (i === 0) {
		if (!isHeader(item)) {
			const pesudoSection = { text: '' };
			col.push({ ...pesudoSection, children: [] });
		}
	}
	if (isHeader(item)) {
		col.push({ ...item, children: [] });
	} else {
		col[col.length - 1].children.push({
            ...item,
            current: item.link === Astro.url.pathname,
        });
	}
	return col;
}, [] as { text: string, children: NavLink[] }[]);
---

<nav>
    <ul>
        {sidebarSections.map(({ text, children }) => (
            <li>
                <NavList title={text} links={children} />
            </li>
        ))}
    </ul>
</nav>

<style>
    nav {
        position: relative;
    }

    ul {
        display: flex;
        flex-direction: column;
        padding: 0;
        margin: 0;
        list-style: none;
    }

    ul {
        gap: var(--gap-xl);
    }
</style>
